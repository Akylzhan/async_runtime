        -:    0:Source:/usr/include/c++/11/bits/move.h
        -:    0:Graph:/home/df/Documents/workspace/async_runtime/cmake-build-debug-coverage/examples/CMakeFiles/tcp_client.dir/tcp_client.cpp.gcno
        -:    0:Data:/home/df/Documents/workspace/async_runtime/cmake-build-debug-coverage/examples/CMakeFiles/tcp_client.dir/tcp_client.cpp.gcda
        -:    0:Runs:1
        -:    1:// Move, forward and identity for C++11 + swap -*- C++ -*-
        -:    2:
        -:    3:// Copyright (C) 2007-2021 Free Software Foundation, Inc.
        -:    4://
        -:    5:// This file is part of the GNU ISO C++ Library.  This library is free
        -:    6:// software; you can redistribute it and/or modify it under the
        -:    7:// terms of the GNU General Public License as published by the
        -:    8:// Free Software Foundation; either version 3, or (at your option)
        -:    9:// any later version.
        -:   10:
        -:   11:// This library is distributed in the hope that it will be useful,
        -:   12:// but WITHOUT ANY WARRANTY; without even the implied warranty of
        -:   13:// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
        -:   14:// GNU General Public License for more details.
        -:   15:
        -:   16:// Under Section 7 of GPL version 3, you are granted additional
        -:   17:// permissions described in the GCC Runtime Library Exception, version
        -:   18:// 3.1, as published by the Free Software Foundation.
        -:   19:
        -:   20:// You should have received a copy of the GNU General Public License and
        -:   21:// a copy of the GCC Runtime Library Exception along with this program;
        -:   22:// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
        -:   23:// <http://www.gnu.org/licenses/>.
        -:   24:
        -:   25:/** @file bits/move.h
        -:   26: *  This is an internal header file, included by other library headers.
        -:   27: *  Do not attempt to use it directly. @headername{utility}
        -:   28: */
        -:   29:
        -:   30:#ifndef _MOVE_H
        -:   31:#define _MOVE_H 1
        -:   32:
        -:   33:#include <bits/c++config.h>
        -:   34:#if __cplusplus < 201103L
        -:   35:# include <bits/concept_check.h>
        -:   36:#endif
        -:   37:
        -:   38:namespace std _GLIBCXX_VISIBILITY(default)
        -:   39:{
        -:   40:_GLIBCXX_BEGIN_NAMESPACE_VERSION
        -:   41:
        -:   42:  // Used, in C++03 mode too, by allocators, etc.
        -:   43:  /**
        -:   44:   *  @brief Same as C++11 std::addressof
        -:   45:   *  @ingroup utilities
        -:   46:   */
        -:   47:  template<typename _Tp>
        -:   48:    inline _GLIBCXX_CONSTEXPR _Tp*
     105*:   49:    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
     105*:   50:    { return __builtin_addressof(__r); }
------------------
_ZSt11__addressofIKNSt13__future_base13_State_baseV27_SetterINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS1_19__exception_ptr_tagEEEEPT_RSC_:
function _ZSt11__addressofIKNSt13__future_base13_State_baseV27_SetterINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS1_19__exception_ptr_tagEEEEPT_RSC_ called 0 returned 0% blocks executed 0%
    #####:   49:    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    #####:   50:    { return __builtin_addressof(__r); }
    %%%%%:   50-block  0
------------------
_ZSt11__addressofISaISt23_Sp_counted_ptr_inplaceIN12AsyncRuntime8IOStreamESaIS2_ELN9__gnu_cxx12_Lock_policyE2EEEEPT_RS8_:
function _ZSt11__addressofISaISt23_Sp_counted_ptr_inplaceIN12AsyncRuntime8IOStreamESaIS2_ELN9__gnu_cxx12_Lock_policyE2EEEEPT_RS8_ called 2 returned 100% blocks executed 100%
        2:   49:    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
        2:   50:    { return __builtin_addressof(__r); }
        2:   50-block  0
------------------
_ZSt11__addressofISaISt23_Sp_counted_ptr_inplaceINSt13__future_base13_State_baseV2ESaIS2_ELN9__gnu_cxx12_Lock_policyE2EEEEPT_RS8_:
function _ZSt11__addressofISaISt23_Sp_counted_ptr_inplaceINSt13__future_base13_State_baseV2ESaIS2_ELN9__gnu_cxx12_Lock_policyE2EEEEPT_RS8_ called 22 returned 100% blocks executed 100%
       22:   49:    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
       22:   50:    { return __builtin_addressof(__r); }
       22:   50-block  0
------------------
_ZSt11__addressofIKNSt13__future_base13_State_baseV27_SetterINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKS8_EEEPT_RSD_:
function _ZSt11__addressofIKNSt13__future_base13_State_baseV27_SetterINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKS8_EEEPT_RSD_ called 2 returned 100% blocks executed 100%
        2:   49:    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
        2:   50:    { return __builtin_addressof(__r); }
        2:   50-block  0
------------------
_ZSt11__addressofIKZN12AsyncRuntime7Runtime5AwaitIiNS0_6ResultIiEEEET_St10shared_ptrIT0_EPNS0_16CoroutineHandlerEEUlPvE_EPS5_RS5_:
function _ZSt11__addressofIKZN12AsyncRuntime7Runtime5AwaitIiNS0_6ResultIiEEEET_St10shared_ptrIT0_EPNS0_16CoroutineHandlerEEUlPvE_EPS5_RS5_ called 8 returned 100% blocks executed 100%
        8:   49:    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
        8:   50:    { return __builtin_addressof(__r); }
        8:   50-block  0
------------------
_ZSt11__addressofIKNSt13__future_base13_State_baseV27_SetterIiRKiEEEPT_RS7_:
function _ZSt11__addressofIKNSt13__future_base13_State_baseV27_SetterIiRKiEEEPT_RS7_ called 4 returned 100% blocks executed 100%
        4:   49:    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
        4:   50:    { return __builtin_addressof(__r); }
        4:   50-block  0
------------------
_ZSt11__addressofIN12AsyncRuntime14CoroutineStateEEPT_RS2_:
function _ZSt11__addressofIN12AsyncRuntime14CoroutineStateEEPT_RS2_ called 22 returned 100% blocks executed 100%
       22:   49:    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
       22:   50:    { return __builtin_addressof(__r); }
       22:   50-block  0
------------------
_ZSt11__addressofIKN12AsyncRuntime14CoroutineStateEEPT_RS3_:
function _ZSt11__addressofIKN12AsyncRuntime14CoroutineStateEEPT_RS3_ called 1 returned 100% blocks executed 100%
        1:   49:    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
        1:   50:    { return __builtin_addressof(__r); }
        1:   50-block  0
------------------
_ZSt11__addressofIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEPT_RS7_:
function _ZSt11__addressofIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEPT_RS7_ called 2 returned 100% blocks executed 100%
        2:   49:    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
        2:   50:    { return __builtin_addressof(__r); }
        2:   50-block  0
------------------
_ZSt11__addressofIKNSt13__future_base13_State_baseV27_SetterIvNS1_19__exception_ptr_tagEEEEPT_RS6_:
function _ZSt11__addressofIKNSt13__future_base13_State_baseV27_SetterIvNS1_19__exception_ptr_tagEEEEPT_RS6_ called 0 returned 0% blocks executed 0%
    #####:   49:    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
    #####:   50:    { return __builtin_addressof(__r); }
    %%%%%:   50-block  0
------------------
_ZSt11__addressofIKNSt13__future_base13_State_baseV27_SetterIvvEEEPT_RS5_:
function _ZSt11__addressofIKNSt13__future_base13_State_baseV27_SetterIvvEEEPT_RS5_ called 5 returned 100% blocks executed 100%
        5:   49:    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
        5:   50:    { return __builtin_addressof(__r); }
        5:   50-block  0
------------------
_ZSt11__addressofIKiEPT_RS1_:
function _ZSt11__addressofIKiEPT_RS1_ called 4 returned 100% blocks executed 100%
        4:   49:    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
        4:   50:    { return __builtin_addressof(__r); }
        4:   50-block  0
------------------
_ZSt11__addressofIZSt9call_onceIMNSt13__future_base13_State_baseV2EFvPSt8functionIFSt10unique_ptrINS1_12_Result_baseENS5_8_DeleterEEvEEPbEJPS2_SA_SB_EEvRSt9once_flagOT_DpOT0_EUlvE_EPSH_RSH_:
function _ZSt11__addressofIZSt9call_onceIMNSt13__future_base13_State_baseV2EFvPSt8functionIFSt10unique_ptrINS1_12_Result_baseENS5_8_DeleterEEvEEPbEJPS2_SA_SB_EEvRSt9once_flagOT_DpOT0_EUlvE_EPSH_RSH_ called 11 returned 100% blocks executed 100%
       11:   49:    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
       11:   50:    { return __builtin_addressof(__r); }
       11:   50-block  0
------------------
_ZSt11__addressofIbEPT_RS0_:
function _ZSt11__addressofIbEPT_RS0_ called 11 returned 100% blocks executed 100%
       11:   49:    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
       11:   50:    { return __builtin_addressof(__r); }
       11:   50-block  0
------------------
_ZSt11__addressofISt8functionIFSt10unique_ptrINSt13__future_base12_Result_baseENS3_8_DeleterEEvEEEPT_RS8_:
function _ZSt11__addressofISt8functionIFSt10unique_ptrINSt13__future_base12_Result_baseENS3_8_DeleterEEvEEEPT_RS8_ called 11 returned 100% blocks executed 100%
       11:   49:    __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
       11:   50:    { return __builtin_addressof(__r); }
       11:   50-block  0
------------------
        -:   51:
        -:   52:#if __cplusplus >= 201103L
        -:   53:
        -:   54:_GLIBCXX_END_NAMESPACE_VERSION
        -:   55:} // namespace
        -:   56:
        -:   57:#include <type_traits> // Brings in std::declval too.
        -:   58:
        -:   59:namespace std _GLIBCXX_VISIBILITY(default)
        -:   60:{
        -:   61:_GLIBCXX_BEGIN_NAMESPACE_VERSION
        -:   62:
        -:   63:  /**
        -:   64:   *  @addtogroup utilities
        -:   65:   *  @{
        -:   66:   */
        -:   67:
        -:   68:  /**
        -:   69:   *  @brief  Forward an lvalue.
        -:   70:   *  @return The parameter cast to the specified type.
        -:   71:   *
        -:   72:   *  This function is used to implement "perfect forwarding".
        -:   73:   */
        -:   74:  template<typename _Tp>
        -:   75:    _GLIBCXX_NODISCARD
        -:   76:    constexpr _Tp&&
     578*:   77:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
     578*:   78:    { return static_cast<_Tp&&>(__t); }
------------------
_ZSt7forwardIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE:
function _ZSt7forwardIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEOT_RNSt16remove_referenceIS7_E4typeE called 28 returned 100% blocks executed 100%
       28:   77:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
       28:   78:    { return static_cast<_Tp&&>(__t); }
       28:   78-block  0
------------------
_ZSt7forwardISt8functionIFvPN12AsyncRuntime16CoroutineHandlerERNS1_5YieldINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEEEOT_RNSt16remove_referenceISF_E4typeE:
function _ZSt7forwardISt8functionIFvPN12AsyncRuntime16CoroutineHandlerERNS1_5YieldINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEEEOT_RNSt16remove_referenceISF_E4typeE called 1 returned 100% blocks executed 100%
        1:   77:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
        1:   78:    { return static_cast<_Tp&&>(__t); }
        1:   78-block  0
------------------
_ZSt7forwardIN12AsyncRuntime19BasicFixedSizeStackINS0_11StackTraitsEEEEOT_RNSt16remove_referenceIS4_E4typeE:
function _ZSt7forwardIN12AsyncRuntime19BasicFixedSizeStackINS0_11StackTraitsEEEEOT_RNSt16remove_referenceIS4_E4typeE called 1 returned 100% blocks executed 100%
        1:   77:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
        1:   78:    { return static_cast<_Tp&&>(__t); }
        1:   78-block  0
------------------
_ZSt7forwardINSt13__future_base13_State_baseV27_SetterINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKS8_EEEOT_RNSt16remove_referenceISC_E4typeE:
function _ZSt7forwardINSt13__future_base13_State_baseV27_SetterINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKS8_EEEOT_RNSt16remove_referenceISC_E4typeE called 6 returned 100% blocks executed 100%
        6:   77:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
        6:   78:    { return static_cast<_Tp&&>(__t); }
        6:   78-block  0
------------------
_ZSt7forwardIRKNSt13__future_base13_State_baseV27_SetterIvNS1_19__exception_ptr_tagEEEEOT_RNSt16remove_referenceIS7_E4typeE:
function _ZSt7forwardIRKNSt13__future_base13_State_baseV27_SetterIvNS1_19__exception_ptr_tagEEEEOT_RNSt16remove_referenceIS7_E4typeE called 0 returned 0% blocks executed 0%
    #####:   77:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    #####:   78:    { return static_cast<_Tp&&>(__t); }
    %%%%%:   78-block  0
------------------
_ZSt7forwardIRKNSt13__future_base13_State_baseV27_SetterIvvEEEOT_RNSt16remove_referenceIS6_E4typeE:
function _ZSt7forwardIRKNSt13__future_base13_State_baseV27_SetterIvvEEEOT_RNSt16remove_referenceIS6_E4typeE called 0 returned 0% blocks executed 0%
    #####:   77:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    #####:   78:    { return static_cast<_Tp&&>(__t); }
    %%%%%:   78-block  0
------------------
_ZSt7forwardIZN12AsyncRuntime7Runtime5AwaitIiNS0_6ResultIiEEEET_St10shared_ptrIT0_EPNS0_16CoroutineHandlerEEUlPvE_EOS5_RNSt16remove_referenceIS5_E4typeE:
function _ZSt7forwardIZN12AsyncRuntime7Runtime5AwaitIiNS0_6ResultIiEEEET_St10shared_ptrIT0_EPNS0_16CoroutineHandlerEEUlPvE_EOS5_RNSt16remove_referenceIS5_E4typeE called 12 returned 100% blocks executed 100%
       12:   77:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
       12:   78:    { return static_cast<_Tp&&>(__t); }
       12:   78-block  0
------------------
_ZSt7forwardINSt13__future_base13_State_baseV27_SetterIiRKiEEEOT_RNSt16remove_referenceIS6_E4typeE:
function _ZSt7forwardINSt13__future_base13_State_baseV27_SetterIiRKiEEEOT_RNSt16remove_referenceIS6_E4typeE called 12 returned 100% blocks executed 100%
       12:   77:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
       12:   78:    { return static_cast<_Tp&&>(__t); }
       12:   78-block  0
------------------
_ZSt7forwardIRNSt13__future_base13_State_baseV27_SetterIvNS1_19__exception_ptr_tagEEEEOT_RNSt16remove_referenceIS6_E4typeE:
function _ZSt7forwardIRNSt13__future_base13_State_baseV27_SetterIvNS1_19__exception_ptr_tagEEEEOT_RNSt16remove_referenceIS6_E4typeE called 0 returned 0% blocks executed 0%
    #####:   77:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    #####:   78:    { return static_cast<_Tp&&>(__t); }
    %%%%%:   78-block  0
------------------
_ZSt7forwardIRNSt13__future_base13_State_baseV27_SetterIvvEEEOT_RNSt16remove_referenceIS5_E4typeE:
function _ZSt7forwardIRNSt13__future_base13_State_baseV27_SetterIvvEEEOT_RNSt16remove_referenceIS5_E4typeE called 10 returned 100% blocks executed 100%
       10:   77:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
       10:   78:    { return static_cast<_Tp&&>(__t); }
       10:   78-block  0
------------------
_ZSt7forwardIRPNSt13__future_base12_Result_baseEEOT_RNSt16remove_referenceIS4_E4typeE:
function _ZSt7forwardIRPNSt13__future_base12_Result_baseEEOT_RNSt16remove_referenceIS4_E4typeE called 51 returned 100% blocks executed 100%
       51:   77:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
       51:   78:    { return static_cast<_Tp&&>(__t); }
       51:   78-block  0
------------------
_ZSt7forwardIPvEOT_RNSt16remove_referenceIS1_E4typeE:
function _ZSt7forwardIPvEOT_RNSt16remove_referenceIS1_E4typeE called 16 returned 100% blocks executed 100%
       16:   77:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
       16:   78:    { return static_cast<_Tp&&>(__t); }
       16:   78-block  0
------------------
_ZSt7forwardIRKSt12_PlaceholderILi1EEEOT_RNSt16remove_referenceIS4_E4typeE:
function _ZSt7forwardIRKSt12_PlaceholderILi1EEEOT_RNSt16remove_referenceIS4_E4typeE called 24 returned 100% blocks executed 100%
       24:   77:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
       24:   78:    { return static_cast<_Tp&&>(__t); }
       24:   78-block  0
------------------
_ZSt7forwardIPFvPN12AsyncRuntime16CoroutineHandlerERNS0_5YieldINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEERKS9_iSD_EEOT_RNSt16remove_referenceISG_E4typeE:
function _ZSt7forwardIPFvPN12AsyncRuntime16CoroutineHandlerERNS0_5YieldINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEERKS9_iSD_EEOT_RNSt16remove_referenceISG_E4typeE called 4 returned 100% blocks executed 100%
        4:   77:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
        4:   78:    { return static_cast<_Tp&&>(__t); }
        4:   78-block  0
------------------
_ZSt7forwardIRmEOT_RNSt16remove_referenceIS1_E4typeE:
function _ZSt7forwardIRmEOT_RNSt16remove_referenceIS1_E4typeE called 8 returned 100% blocks executed 100%
        8:   77:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
        8:   78:    { return static_cast<_Tp&&>(__t); }
        8:   78-block  0
------------------
_ZSt7forwardIRPKcEOT_RNSt16remove_referenceIS3_E4typeE:
function _ZSt7forwardIRPKcEOT_RNSt16remove_referenceIS3_E4typeE called 8 returned 100% blocks executed 100%
        8:   77:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
        8:   78:    { return static_cast<_Tp&&>(__t); }
        8:   78-block  0
------------------
_ZSt7forwardINSt13__future_base13_State_baseV27_SetterIvNS1_19__exception_ptr_tagEEEEOT_RNSt16remove_referenceIS5_E4typeE:
function _ZSt7forwardINSt13__future_base13_State_baseV27_SetterIvNS1_19__exception_ptr_tagEEEEOT_RNSt16remove_referenceIS5_E4typeE called 0 returned 0% blocks executed 0%
    #####:   77:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    #####:   78:    { return static_cast<_Tp&&>(__t); }
    %%%%%:   78-block  0
------------------
_ZSt7forwardINSt13__future_base13_State_baseV27_SetterIvvEEEOT_RNSt16remove_referenceIS4_E4typeE:
function _ZSt7forwardINSt13__future_base13_State_baseV27_SetterIvvEEEOT_RNSt16remove_referenceIS4_E4typeE called 15 returned 100% blocks executed 100%
       15:   77:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
       15:   78:    { return static_cast<_Tp&&>(__t); }
       15:   78-block  0
------------------
_ZSt7forwardINSt13__future_base12_Result_base8_DeleterEEOT_RNSt16remove_referenceIS3_E4typeE:
function _ZSt7forwardINSt13__future_base12_Result_base8_DeleterEEOT_RNSt16remove_referenceIS3_E4typeE called 102 returned 100% blocks executed 100%
      102:   77:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
      102:   78:    { return static_cast<_Tp&&>(__t); }
      102:   78-block  0
------------------
_ZSt7forwardIPbEOT_RNSt16remove_referenceIS1_E4typeE:
function _ZSt7forwardIPbEOT_RNSt16remove_referenceIS1_E4typeE called 33 returned 100% blocks executed 100%
       33:   77:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
       33:   78:    { return static_cast<_Tp&&>(__t); }
       33:   78-block  0
------------------
_ZSt7forwardIPSt8functionIFSt10unique_ptrINSt13__future_base12_Result_baseENS3_8_DeleterEEvEEEOT_RNSt16remove_referenceIS9_E4typeE:
function _ZSt7forwardIPSt8functionIFSt10unique_ptrINSt13__future_base12_Result_baseENS3_8_DeleterEEvEEEOT_RNSt16remove_referenceIS9_E4typeE called 33 returned 100% blocks executed 100%
       33:   77:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
       33:   78:    { return static_cast<_Tp&&>(__t); }
       33:   78-block  0
------------------
_ZSt7forwardIPNSt13__future_base13_State_baseV2EEOT_RNSt16remove_referenceIS3_E4typeE:
function _ZSt7forwardIPNSt13__future_base13_State_baseV2EEOT_RNSt16remove_referenceIS3_E4typeE called 33 returned 100% blocks executed 100%
       33:   77:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
       33:   78:    { return static_cast<_Tp&&>(__t); }
       33:   78-block  0
------------------
_ZSt7forwardIMNSt13__future_base13_State_baseV2EFvPSt8functionIFSt10unique_ptrINS0_12_Result_baseENS4_8_DeleterEEvEEPbEEOT_RNSt16remove_referenceISD_E4typeE:
function _ZSt7forwardIMNSt13__future_base13_State_baseV2EFvPSt8functionIFSt10unique_ptrINS0_12_Result_baseENS4_8_DeleterEEvEEPbEEOT_RNSt16remove_referenceISD_E4typeE called 22 returned 100% blocks executed 100%
       22:   77:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
       22:   78:    { return static_cast<_Tp&&>(__t); }
       22:   78-block  0
------------------
_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE:
function _ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE called 11 returned 100% blocks executed 100%
       11:   77:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
       11:   78:    { return static_cast<_Tp&&>(__t); }
       11:   78-block  0
------------------
_ZSt7forwardIRKZN12AsyncRuntime7Runtime5AwaitIiNS0_6ResultIiEEEET_St10shared_ptrIT0_EPNS0_16CoroutineHandlerEEUlPvE_EOS5_RNSt16remove_referenceIS5_E4typeE:
function _ZSt7forwardIRKZN12AsyncRuntime7Runtime5AwaitIiNS0_6ResultIiEEEET_St10shared_ptrIT0_EPNS0_16CoroutineHandlerEEUlPvE_EOS5_RNSt16remove_referenceIS5_E4typeE called 8 returned 100% blocks executed 100%
        8:   77:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
        8:   78:    { return static_cast<_Tp&&>(__t); }
        8:   78-block  0
------------------
_ZSt7forwardIRPN12AsyncRuntime13BaseCoroutineINS0_19BasicFixedSizeStackINS0_11StackTraitsEEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceISE_E4typeE:
function _ZSt7forwardIRPN12AsyncRuntime13BaseCoroutineINS0_19BasicFixedSizeStackINS0_11StackTraitsEEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceISE_E4typeE called 15 returned 100% blocks executed 100%
       15:   77:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
       15:   78:    { return static_cast<_Tp&&>(__t); }
       15:   78-block  0
------------------
_ZSt7forwardIRN12AsyncRuntime13ExecutorStateEEOT_RNSt16remove_referenceIS3_E4typeE:
function _ZSt7forwardIRN12AsyncRuntime13ExecutorStateEEOT_RNSt16remove_referenceIS3_E4typeE called 25 returned 100% blocks executed 100%
       25:   77:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
       25:   78:    { return static_cast<_Tp&&>(__t); }
       25:   78-block  0
------------------
_ZSt7forwardIRKNSt13__future_base13_State_baseV27_SetterINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS1_19__exception_ptr_tagEEEEOT_RNSt16remove_referenceISD_E4typeE:
function _ZSt7forwardIRKNSt13__future_base13_State_baseV27_SetterINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS1_19__exception_ptr_tagEEEEOT_RNSt16remove_referenceISD_E4typeE called 0 returned 0% blocks executed 0%
    #####:   77:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    #####:   78:    { return static_cast<_Tp&&>(__t); }
    %%%%%:   78-block  0
------------------
_ZSt7forwardIRNSt13__future_base13_State_baseV27_SetterINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS1_19__exception_ptr_tagEEEEOT_RNSt16remove_referenceISC_E4typeE:
function _ZSt7forwardIRNSt13__future_base13_State_baseV27_SetterINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS1_19__exception_ptr_tagEEEEOT_RNSt16remove_referenceISC_E4typeE called 0 returned 0% blocks executed 0%
    #####:   77:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    #####:   78:    { return static_cast<_Tp&&>(__t); }
    %%%%%:   78-block  0
------------------
_ZSt7forwardIOPN12AsyncRuntime16CoroutineHandlerEEOT_RNSt16remove_referenceIS4_E4typeE:
function _ZSt7forwardIOPN12AsyncRuntime16CoroutineHandlerEEOT_RNSt16remove_referenceIS4_E4typeE called 1 returned 100% blocks executed 100%
        1:   77:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
        1:   78:    { return static_cast<_Tp&&>(__t); }
        1:   78-block  0
------------------
_ZSt7forwardIRPFvPN12AsyncRuntime16CoroutineHandlerERNS0_5YieldINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEERKS9_iSD_EEOT_RNSt16remove_referenceISH_E4typeE:
function _ZSt7forwardIRPFvPN12AsyncRuntime16CoroutineHandlerERNS0_5YieldINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEERKS9_iSD_EEOT_RNSt16remove_referenceISH_E4typeE called 2 returned 100% blocks executed 100%
        2:   77:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
        2:   78:    { return static_cast<_Tp&&>(__t); }
        2:   78-block  0
------------------
_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE:
function _ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE called 3 returned 100% blocks executed 100%
        3:   77:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
        3:   78:    { return static_cast<_Tp&&>(__t); }
        3:   78-block  0
------------------
_ZSt7forwardINSt13__future_base13_State_baseV27_SetterINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS1_19__exception_ptr_tagEEEEOT_RNSt16remove_referenceISB_E4typeE:
function _ZSt7forwardINSt13__future_base13_State_baseV27_SetterINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS1_19__exception_ptr_tagEEEEOT_RNSt16remove_referenceISB_E4typeE called 0 returned 0% blocks executed 0%
    #####:   77:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    #####:   78:    { return static_cast<_Tp&&>(__t); }
    %%%%%:   78-block  0
------------------
_ZSt7forwardIRKSt5_BindIFPFvPN12AsyncRuntime16CoroutineHandlerERNS1_5YieldINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEERKSA_iSE_ESt12_PlaceholderILi1EESH_ILi2EESA_iSA_EEEOT_RNSt16remove_referenceISO_E4typeE:
function _ZSt7forwardIRKSt5_BindIFPFvPN12AsyncRuntime16CoroutineHandlerERNS1_5YieldINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEERKSA_iSE_ESt12_PlaceholderILi1EESH_ILi2EESA_iSA_EEEOT_RNSt16remove_referenceISO_E4typeE called 2 returned 100% blocks executed 100%
        2:   77:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
        2:   78:    { return static_cast<_Tp&&>(__t); }
        2:   78-block  0
------------------
_ZSt7forwardIRKNSt13__future_base13_State_baseV27_SetterINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKS8_EEEOT_RNSt16remove_referenceISE_E4typeE:
function _ZSt7forwardIRKNSt13__future_base13_State_baseV27_SetterINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKS8_EEEOT_RNSt16remove_referenceISE_E4typeE called 0 returned 0% blocks executed 0%
    #####:   77:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    #####:   78:    { return static_cast<_Tp&&>(__t); }
    %%%%%:   78-block  0
------------------
_ZSt7forwardIRSt5_BindIFPFvPN12AsyncRuntime16CoroutineHandlerERNS1_5YieldINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEERKSA_iSE_ESt12_PlaceholderILi1EESH_ILi2EESA_iSA_EEEOT_RNSt16remove_referenceISN_E4typeE:
function _ZSt7forwardIRSt5_BindIFPFvPN12AsyncRuntime16CoroutineHandlerERNS1_5YieldINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEERKSA_iSE_ESt12_PlaceholderILi1EESH_ILi2EESA_iSA_EEEOT_RNSt16remove_referenceISN_E4typeE called 2 returned 100% blocks executed 100%
        2:   77:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
        2:   78:    { return static_cast<_Tp&&>(__t); }
        2:   78-block  0
------------------
_ZSt7forwardIRMN12AsyncRuntime13BaseCoroutineINS0_19BasicFixedSizeStackINS0_11StackTraitsEEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEFvRKNS0_13ExecutorStateEEEOT_RNSt16remove_referenceISI_E4typeE:
function _ZSt7forwardIRMN12AsyncRuntime13BaseCoroutineINS0_19BasicFixedSizeStackINS0_11StackTraitsEEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEFvRKNS0_13ExecutorStateEEEOT_RNSt16remove_referenceISI_E4typeE called 5 returned 100% blocks executed 100%
        5:   77:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
        5:   78:    { return static_cast<_Tp&&>(__t); }
        5:   78-block  0
------------------
_ZSt7forwardIRNSt13__future_base13_State_baseV27_SetterINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKS8_EEEOT_RNSt16remove_referenceISD_E4typeE:
function _ZSt7forwardIRNSt13__future_base13_State_baseV27_SetterINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKS8_EEEOT_RNSt16remove_referenceISD_E4typeE called 4 returned 100% blocks executed 100%
        4:   77:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
        4:   78:    { return static_cast<_Tp&&>(__t); }
        4:   78-block  0
------------------
_ZSt7forwardIRKNSt13__future_base13_State_baseV27_SetterIiRKiEEEOT_RNSt16remove_referenceIS8_E4typeE:
function _ZSt7forwardIRKNSt13__future_base13_State_baseV27_SetterIiRKiEEEOT_RNSt16remove_referenceIS8_E4typeE called 0 returned 0% blocks executed 0%
    #####:   77:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
    #####:   78:    { return static_cast<_Tp&&>(__t); }
    %%%%%:   78-block  0
------------------
_ZSt7forwardIRN12AsyncRuntime5YieldINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceISA_E4typeE:
function _ZSt7forwardIRN12AsyncRuntime5YieldINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceISA_E4typeE called 11 returned 100% blocks executed 100%
       11:   77:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
       11:   78:    { return static_cast<_Tp&&>(__t); }
       11:   78-block  0
------------------
_ZSt7forwardIPN12AsyncRuntime16CoroutineHandlerEEOT_RNSt16remove_referenceIS3_E4typeE:
function _ZSt7forwardIPN12AsyncRuntime16CoroutineHandlerEEOT_RNSt16remove_referenceIS3_E4typeE called 11 returned 100% blocks executed 100%
       11:   77:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
       11:   78:    { return static_cast<_Tp&&>(__t); }
       11:   78-block  0
------------------
_ZSt7forwardIRZN12AsyncRuntime7Runtime5AwaitIiNS0_6ResultIiEEEET_St10shared_ptrIT0_EPNS0_16CoroutineHandlerEEUlPvE_EOS5_RNSt16remove_referenceIS5_E4typeE:
function _ZSt7forwardIRZN12AsyncRuntime7Runtime5AwaitIiNS0_6ResultIiEEEET_St10shared_ptrIT0_EPNS0_16CoroutineHandlerEEUlPvE_EOS5_RNSt16remove_referenceIS5_E4typeE called 8 returned 100% blocks executed 100%
        8:   77:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
        8:   78:    { return static_cast<_Tp&&>(__t); }
        8:   78-block  0
------------------
_ZSt7forwardIRNSt13__future_base13_State_baseV27_SetterIiRKiEEEOT_RNSt16remove_referenceIS7_E4typeE:
function _ZSt7forwardIRNSt13__future_base13_State_baseV27_SetterIiRKiEEEOT_RNSt16remove_referenceIS7_E4typeE called 8 returned 100% blocks executed 100%
        8:   77:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
        8:   78:    { return static_cast<_Tp&&>(__t); }
        8:   78-block  0
------------------
_ZSt7forwardISt5_BindIFMN12AsyncRuntime13BaseCoroutineINS1_19BasicFixedSizeStackINS1_11StackTraitsEEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEFvRKNS1_13ExecutorStateEEPSC_St12_PlaceholderILi1EEEEEOT_RNSt16remove_referenceISN_E4typeE:
function _ZSt7forwardISt5_BindIFMN12AsyncRuntime13BaseCoroutineINS1_19BasicFixedSizeStackINS1_11StackTraitsEEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEFvRKNS1_13ExecutorStateEEPSC_St12_PlaceholderILi1EEEEEOT_RNSt16remove_referenceISN_E4typeE called 5 returned 100% blocks executed 100%
        5:   77:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
        5:   78:    { return static_cast<_Tp&&>(__t); }
        5:   78-block  0
------------------
_ZSt7forwardIPN12AsyncRuntime13BaseCoroutineINS0_19BasicFixedSizeStackINS0_11StackTraitsEEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceISD_E4typeE:
function _ZSt7forwardIPN12AsyncRuntime13BaseCoroutineINS0_19BasicFixedSizeStackINS0_11StackTraitsEEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEOT_RNSt16remove_referenceISD_E4typeE called 25 returned 100% blocks executed 100%
       25:   77:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
       25:   78:    { return static_cast<_Tp&&>(__t); }
       25:   78-block  0
------------------
_ZSt7forwardIMN12AsyncRuntime13BaseCoroutineINS0_19BasicFixedSizeStackINS0_11StackTraitsEEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEFvRKNS0_13ExecutorStateEEEOT_RNSt16remove_referenceISH_E4typeE:
function _ZSt7forwardIMN12AsyncRuntime13BaseCoroutineINS0_19BasicFixedSizeStackINS0_11StackTraitsEEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEFvRKNS0_13ExecutorStateEEEOT_RNSt16remove_referenceISH_E4typeE called 5 returned 100% blocks executed 100%
        5:   77:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
        5:   78:    { return static_cast<_Tp&&>(__t); }
        5:   78-block  0
------------------
_ZSt7forwardISt5_BindIFPFvPN12AsyncRuntime16CoroutineHandlerERNS1_5YieldINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEERKSA_iSE_ESt12_PlaceholderILi1EESH_ILi2EESA_iSA_EEEOT_RNSt16remove_referenceISM_E4typeE:
function _ZSt7forwardISt5_BindIFPFvPN12AsyncRuntime16CoroutineHandlerERNS1_5YieldINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEERKSA_iSE_ESt12_PlaceholderILi1EESH_ILi2EESA_iSA_EEEOT_RNSt16remove_referenceISM_E4typeE called 3 returned 100% blocks executed 100%
        3:   77:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
        3:   78:    { return static_cast<_Tp&&>(__t); }
        3:   78-block  0
------------------
_ZSt7forwardIRKSt12_PlaceholderILi2EEEOT_RNSt16remove_referenceIS4_E4typeE:
function _ZSt7forwardIRKSt12_PlaceholderILi2EEEOT_RNSt16remove_referenceIS4_E4typeE called 5 returned 100% blocks executed 100%
        5:   77:    forward(typename std::remove_reference<_Tp>::type& __t) noexcept
        5:   78:    { return static_cast<_Tp&&>(__t); }
        5:   78-block  0
------------------
        -:   79:
        -:   80:  /**
        -:   81:   *  @brief  Forward an rvalue.
        -:   82:   *  @return The parameter cast to the specified type.
        -:   83:   *
        -:   84:   *  This function is used to implement "perfect forwarding".
        -:   85:   */
        -:   86:  template<typename _Tp>
        -:   87:    _GLIBCXX_NODISCARD
        -:   88:    constexpr _Tp&&
        -:   89:    forward(typename std::remove_reference<_Tp>::type&& __t) noexcept
        -:   90:    {
        -:   91:      static_assert(!std::is_lvalue_reference<_Tp>::value,
        -:   92:	  "std::forward must not be used to convert an rvalue to an lvalue");
        -:   93:      return static_cast<_Tp&&>(__t);
        -:   94:    }
        -:   95:
        -:   96:  /**
        -:   97:   *  @brief  Convert a value to an rvalue.
        -:   98:   *  @param  __t  A thing of arbitrary type.
        -:   99:   *  @return The parameter cast to an rvalue-reference to allow moving it.
        -:  100:  */
        -:  101:  template<typename _Tp>
        -:  102:    _GLIBCXX_NODISCARD
        -:  103:    constexpr typename std::remove_reference<_Tp>::type&&
     258*:  104:    move(_Tp&& __t) noexcept
     258*:  105:    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
------------------
_ZSt4moveIRiEONSt16remove_referenceIT_E4typeEOS2_:
function _ZSt4moveIRiEONSt16remove_referenceIT_E4typeEOS2_ called 4 returned 100% blocks executed 100%
        4:  104:    move(_Tp&& __t) noexcept
        4:  105:    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
        4:  105-block  0
------------------
_ZSt4moveIRSt6futureIvEEONSt16remove_referenceIT_E4typeEOS4_:
function _ZSt4moveIRSt6futureIvEEONSt16remove_referenceIT_E4typeEOS4_ called 10 returned 100% blocks executed 100%
       10:  104:    move(_Tp&& __t) noexcept
       10:  105:    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
       10:  105-block  0
------------------
_ZSt4moveIRSt10shared_ptrINSt13__future_base13_State_baseV2EEEONSt16remove_referenceIT_E4typeEOS6_:
function _ZSt4moveIRSt10shared_ptrINSt13__future_base13_State_baseV2EEEONSt16remove_referenceIT_E4typeEOS6_ called 22 returned 100% blocks executed 100%
       22:  104:    move(_Tp&& __t) noexcept
       22:  105:    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
       22:  105-block  0
------------------
_ZSt4moveIRSt10unique_ptrINSt13__future_base7_ResultIvEENS1_12_Result_base8_DeleterEEEONSt16remove_referenceIT_E4typeEOS9_:
function _ZSt4moveIRSt10unique_ptrINSt13__future_base7_ResultIvEENS1_12_Result_base8_DeleterEEEONSt16remove_referenceIT_E4typeEOS9_ called 10 returned 100% blocks executed 100%
       10:  104:    move(_Tp&& __t) noexcept
       10:  105:    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
       10:  105-block  0
------------------
_ZSt4moveIRSaIcEEONSt16remove_referenceIT_E4typeEOS3_:
function _ZSt4moveIRSaIcEEONSt16remove_referenceIT_E4typeEOS3_ called 0 returned 0% blocks executed 0%
    #####:  104:    move(_Tp&& __t) noexcept
    #####:  105:    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
    %%%%%:  105-block  0
------------------
_ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_:
function _ZSt4moveIRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEONSt16remove_referenceIT_E4typeEOS8_ called 1 returned 100% blocks executed 100%
        1:  104:    move(_Tp&& __t) noexcept
        1:  105:    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
        1:  105-block  0
------------------
_ZSt4moveIRPNSt13__future_base12_Result_baseEEONSt16remove_referenceIT_E4typeEOS5_:
function _ZSt4moveIRPNSt13__future_base12_Result_baseEEONSt16remove_referenceIT_E4typeEOS5_ called 44 returned 100% blocks executed 100%
       44:  104:    move(_Tp&& __t) noexcept
       44:  105:    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
       44:  105-block  0
------------------
_ZSt4moveIRPNSt13__future_base7_ResultIvEEEONSt16remove_referenceIT_E4typeEOS6_:
function _ZSt4moveIRPNSt13__future_base7_ResultIvEEEONSt16remove_referenceIT_E4typeEOS6_ called 0 returned 0% blocks executed 0%
    #####:  104:    move(_Tp&& __t) noexcept
    #####:  105:    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
    %%%%%:  105-block  0
------------------
_ZSt4moveIRSt5tupleIJPNSt13__future_base7_ResultIvEENS1_12_Result_base8_DeleterEEEEONSt16remove_referenceIT_E4typeEOSA_:
function _ZSt4moveIRSt5tupleIJPNSt13__future_base7_ResultIvEENS1_12_Result_base8_DeleterEEEEONSt16remove_referenceIT_E4typeEOSA_ called 5 returned 100% blocks executed 100%
        5:  104:    move(_Tp&& __t) noexcept
        5:  105:    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
        5:  105-block  0
------------------
_ZSt4moveIRPNSt13__future_base13_State_baseV2EEONSt16remove_referenceIT_E4typeEOS5_:
function _ZSt4moveIRPNSt13__future_base13_State_baseV2EEONSt16remove_referenceIT_E4typeEOS5_ called 48 returned 100% blocks executed 100%
       48:  104:    move(_Tp&& __t) noexcept
       48:  105:    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
       48:  105-block  0
------------------
_ZSt4moveIRNSt13__future_base12_Result_base8_DeleterEEONSt16remove_referenceIT_E4typeEOS5_:
function _ZSt4moveIRNSt13__future_base12_Result_base8_DeleterEEONSt16remove_referenceIT_E4typeEOS5_ called 33 returned 100% blocks executed 100%
       33:  104:    move(_Tp&& __t) noexcept
       33:  105:    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
       33:  105-block  0
------------------
_ZSt4moveIRSt10unique_ptrINSt13__future_base7_ResultIiEENS1_12_Result_base8_DeleterEEEONSt16remove_referenceIT_E4typeEOS9_:
function _ZSt4moveIRSt10unique_ptrINSt13__future_base7_ResultIiEENS1_12_Result_base8_DeleterEEEONSt16remove_referenceIT_E4typeEOS9_ called 4 returned 100% blocks executed 100%
        4:  104:    move(_Tp&& __t) noexcept
        4:  105:    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
        4:  105-block  0
------------------
_ZSt4moveIRSt6futureIiEEONSt16remove_referenceIT_E4typeEOS4_:
function _ZSt4moveIRSt6futureIiEEONSt16remove_referenceIT_E4typeEOS4_ called 8 returned 100% blocks executed 100%
        8:  104:    move(_Tp&& __t) noexcept
        8:  105:    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
        8:  105-block  0
------------------
_ZSt4moveIRPNSt13__future_base7_ResultIiEEEONSt16remove_referenceIT_E4typeEOS6_:
function _ZSt4moveIRPNSt13__future_base7_ResultIiEEEONSt16remove_referenceIT_E4typeEOS6_ called 0 returned 0% blocks executed 0%
    #####:  104:    move(_Tp&& __t) noexcept
    #####:  105:    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
    %%%%%:  105-block  0
------------------
_ZSt4moveIRSt10shared_ptrIN12AsyncRuntime6ResultINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEEONSt16remove_referenceIT_E4typeEOSD_:
function _ZSt4moveIRSt10shared_ptrIN12AsyncRuntime6ResultINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEEONSt16remove_referenceIT_E4typeEOSD_ called 1 returned 100% blocks executed 100%
        1:  104:    move(_Tp&& __t) noexcept
        1:  105:    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
        1:  105-block  0
------------------
_ZSt4moveIRSt5tupleIJRN12AsyncRuntime13ExecutorStateEEEEONSt16remove_referenceIT_E4typeEOS7_:
function _ZSt4moveIRSt5tupleIJRN12AsyncRuntime13ExecutorStateEEEEONSt16remove_referenceIT_E4typeEOS7_ called 5 returned 100% blocks executed 100%
        5:  104:    move(_Tp&& __t) noexcept
        5:  105:    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
        5:  105-block  0
------------------
_ZSt4moveIRPFvPN12AsyncRuntime16CoroutineHandlerERNS0_5YieldINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEERKS9_iSD_EEONSt16remove_referenceIT_E4typeEOSI_:
function _ZSt4moveIRPFvPN12AsyncRuntime16CoroutineHandlerERNS0_5YieldINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEERKS9_iSD_EEONSt16remove_referenceIT_E4typeEOSI_ called 1 returned 100% blocks executed 100%
        1:  104:    move(_Tp&& __t) noexcept
        1:  105:    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
        1:  105-block  0
------------------
_ZSt4moveIRMN12AsyncRuntime13BaseCoroutineINS0_19BasicFixedSizeStackINS0_11StackTraitsEEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEFvRKNS0_13ExecutorStateEEEONSt16remove_referenceIT_E4typeEOSJ_:
function _ZSt4moveIRMN12AsyncRuntime13BaseCoroutineINS0_19BasicFixedSizeStackINS0_11StackTraitsEEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEFvRKNS0_13ExecutorStateEEEONSt16remove_referenceIT_E4typeEOSJ_ called 5 returned 100% blocks executed 100%
        5:  104:    move(_Tp&& __t) noexcept
        5:  105:    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
        5:  105-block  0
------------------
_ZSt4moveIRSt9_Any_dataEONSt16remove_referenceIT_E4typeEOS3_:
function _ZSt4moveIRSt9_Any_dataEONSt16remove_referenceIT_E4typeEOS3_ called 12 returned 100% blocks executed 100%
       12:  104:    move(_Tp&& __t) noexcept
       12:  105:    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
       12:  105-block  0
------------------
_ZSt4moveIRPFbRSt9_Any_dataRKS0_St18_Manager_operationEEONSt16remove_referenceIT_E4typeEOS9_:
function _ZSt4moveIRPFbRSt9_Any_dataRKS0_St18_Manager_operationEEONSt16remove_referenceIT_E4typeEOS9_ called 12 returned 100% blocks executed 100%
       12:  104:    move(_Tp&& __t) noexcept
       12:  105:    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
       12:  105-block  0
------------------
_ZSt4moveIRPFvRKSt9_Any_dataOPvEEONSt16remove_referenceIT_E4typeEOS9_:
function _ZSt4moveIRPFvRKSt9_Any_dataOPvEEONSt16remove_referenceIT_E4typeEOS9_ called 12 returned 100% blocks executed 100%
       12:  104:    move(_Tp&& __t) noexcept
       12:  105:    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
       12:  105-block  0
------------------
_ZSt4moveIRSt10unique_ptrINSt13__future_base7_ResultINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS1_12_Result_base8_DeleterEEEONSt16remove_referenceIT_E4typeEOSF_:
function _ZSt4moveIRSt10unique_ptrINSt13__future_base7_ResultINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS1_12_Result_base8_DeleterEEEONSt16remove_referenceIT_E4typeEOSF_ called 3 returned 100% blocks executed 100%
        3:  104:    move(_Tp&& __t) noexcept
        3:  105:    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
        3:  105-block  0
------------------
_ZSt4moveIRSt6futureINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEONSt16remove_referenceIT_E4typeEOSA_:
function _ZSt4moveIRSt6futureINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEONSt16remove_referenceIT_E4typeEOSA_ called 4 returned 100% blocks executed 100%
        4:  104:    move(_Tp&& __t) noexcept
        4:  105:    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
        4:  105-block  0
------------------
_ZSt4moveIRPN12AsyncRuntime6ResultINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEONSt16remove_referenceIT_E4typeEOSC_:
function _ZSt4moveIRPN12AsyncRuntime6ResultINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEONSt16remove_referenceIT_E4typeEOSC_ called 6 returned 100% blocks executed 100%
        6:  104:    move(_Tp&& __t) noexcept
        6:  105:    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
        6:  105-block  0
------------------
_ZSt4moveIRPNSt13__future_base7_ResultINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEONSt16remove_referenceIT_E4typeEOSC_:
function _ZSt4moveIRPNSt13__future_base7_ResultINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEONSt16remove_referenceIT_E4typeEOSC_ called 0 returned 0% blocks executed 0%
    #####:  104:    move(_Tp&& __t) noexcept
    #####:  105:    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
    %%%%%:  105-block  0
------------------
_ZSt4moveIRSt5tupleIJPNSt13__future_base7_ResultIiEENS1_12_Result_base8_DeleterEEEEONSt16remove_referenceIT_E4typeEOSA_:
function _ZSt4moveIRSt5tupleIJPNSt13__future_base7_ResultIiEENS1_12_Result_base8_DeleterEEEEONSt16remove_referenceIT_E4typeEOSA_ called 4 returned 100% blocks executed 100%
        4:  104:    move(_Tp&& __t) noexcept
        4:  105:    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
        4:  105-block  0
------------------
_ZSt4moveIRN12AsyncRuntime19BasicFixedSizeStackINS0_11StackTraitsEEEEONSt16remove_referenceIT_E4typeEOS6_:
function _ZSt4moveIRN12AsyncRuntime19BasicFixedSizeStackINS0_11StackTraitsEEEEONSt16remove_referenceIT_E4typeEOS6_ called 0 returned 0% blocks executed 0%
    #####:  104:    move(_Tp&& __t) noexcept
    #####:  105:    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
    %%%%%:  105-block  0
------------------
_ZSt4moveIRSt5tupleIJPNSt13__future_base7_ResultINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS1_12_Result_base8_DeleterEEEEONSt16remove_referenceIT_E4typeEOSG_:
function _ZSt4moveIRSt5tupleIJPNSt13__future_base7_ResultINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEENS1_12_Result_base8_DeleterEEEEONSt16remove_referenceIT_E4typeEOSG_ called 2 returned 100% blocks executed 100%
        2:  104:    move(_Tp&& __t) noexcept
        2:  105:    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
        2:  105-block  0
------------------
_ZSt4moveIRSt5tupleIJOPN12AsyncRuntime16CoroutineHandlerERNS1_5YieldINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEEEONSt16remove_referenceIT_E4typeEOSH_:
function _ZSt4moveIRSt5tupleIJOPN12AsyncRuntime16CoroutineHandlerERNS1_5YieldINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEEEONSt16remove_referenceIT_E4typeEOSH_ called 2 returned 100% blocks executed 100%
        2:  104:    move(_Tp&& __t) noexcept
        2:  105:    { return static_cast<typename std::remove_reference<_Tp>::type&&>(__t); }
        2:  105-block  0
------------------
        -:  106:
        -:  107:
        -:  108:  template<typename _Tp>
        -:  109:    struct __move_if_noexcept_cond
        -:  110:    : public __and_<__not_<is_nothrow_move_constructible<_Tp>>,
        -:  111:                    is_copy_constructible<_Tp>>::type { };
        -:  112:
        -:  113:  /**
        -:  114:   *  @brief  Conditionally convert a value to an rvalue.
        -:  115:   *  @param  __x  A thing of arbitrary type.
        -:  116:   *  @return The parameter, possibly cast to an rvalue-reference.
        -:  117:   *
        -:  118:   *  Same as std::move unless the type's move constructor could throw and the
        -:  119:   *  type is copyable, in which case an lvalue-reference is returned instead.
        -:  120:   */
        -:  121:  template<typename _Tp>
        -:  122:    _GLIBCXX_NODISCARD
        -:  123:    constexpr typename
        -:  124:    conditional<__move_if_noexcept_cond<_Tp>::value, const _Tp&, _Tp&&>::type
        -:  125:    move_if_noexcept(_Tp& __x) noexcept
        -:  126:    { return std::move(__x); }
        -:  127:
        -:  128:  // declval, from type_traits.
        -:  129:
        -:  130:#if __cplusplus > 201402L
        -:  131:  // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  132:  // 2296. std::addressof should be constexpr
        -:  133:# define __cpp_lib_addressof_constexpr 201603
        -:  134:#endif
        -:  135:  /**
        -:  136:   *  @brief Returns the actual address of the object or function
        -:  137:   *         referenced by r, even in the presence of an overloaded
        -:  138:   *         operator&.
        -:  139:   *  @param  __r  Reference to an object or function.
        -:  140:   *  @return   The actual address.
        -:  141:  */
        -:  142:  template<typename _Tp>
        -:  143:    _GLIBCXX_NODISCARD
        -:  144:    inline _GLIBCXX17_CONSTEXPR _Tp*
        -:  145:    addressof(_Tp& __r) noexcept
        -:  146:    { return std::__addressof(__r); }
        -:  147:
        -:  148:  // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  149:  // 2598. addressof works on temporaries
        -:  150:  template<typename _Tp>
        -:  151:    const _Tp* addressof(const _Tp&&) = delete;
        -:  152:
        -:  153:  // C++11 version of std::exchange for internal use.
        -:  154:  template <typename _Tp, typename _Up = _Tp>
        -:  155:    _GLIBCXX20_CONSTEXPR
        -:  156:    inline _Tp
        -:  157:    __exchange(_Tp& __obj, _Up&& __new_val)
        -:  158:    {
        -:  159:      _Tp __old_val = std::move(__obj);
        -:  160:      __obj = std::forward<_Up>(__new_val);
        -:  161:      return __old_val;
        -:  162:    }
        -:  163:
        -:  164:  /// @} group utilities
        -:  165:
        -:  166:#define _GLIBCXX_FWDREF(_Tp) _Tp&&
        -:  167:#define _GLIBCXX_MOVE(__val) std::move(__val)
        -:  168:#define _GLIBCXX_FORWARD(_Tp, __val) std::forward<_Tp>(__val)
        -:  169:#else
        -:  170:#define _GLIBCXX_FWDREF(_Tp) const _Tp&
        -:  171:#define _GLIBCXX_MOVE(__val) (__val)
        -:  172:#define _GLIBCXX_FORWARD(_Tp, __val) (__val)
        -:  173:#endif
        -:  174:
        -:  175:  /**
        -:  176:   *  @addtogroup utilities
        -:  177:   *  @{
        -:  178:   */
        -:  179:
        -:  180:  /**
        -:  181:   *  @brief Swaps two values.
        -:  182:   *  @param  __a  A thing of arbitrary type.
        -:  183:   *  @param  __b  Another thing of arbitrary type.
        -:  184:   *  @return   Nothing.
        -:  185:  */
        -:  186:  template<typename _Tp>
        -:  187:    _GLIBCXX20_CONSTEXPR
        -:  188:    inline
        -:  189:#if __cplusplus >= 201103L
        -:  190:    typename enable_if<__and_<__not_<__is_tuple_like<_Tp>>,
        -:  191:			      is_move_constructible<_Tp>,
        -:  192:			      is_move_assignable<_Tp>>::value>::type
        -:  193:#else
        -:  194:    void
        -:  195:#endif
       52:  196:    swap(_Tp& __a, _Tp& __b)
        -:  197:    _GLIBCXX_NOEXCEPT_IF(__and_<is_nothrow_move_constructible<_Tp>,
        -:  198:				is_nothrow_move_assignable<_Tp>>::value)
        -:  199:    {
        -:  200:#if __cplusplus < 201103L
        -:  201:      // concept requirements
        -:  202:      __glibcxx_function_requires(_SGIAssignableConcept<_Tp>)
        -:  203:#endif
       52:  204:      _Tp __tmp = _GLIBCXX_MOVE(__a);
       52:  205:      __a = _GLIBCXX_MOVE(__b);
       52:  206:      __b = _GLIBCXX_MOVE(__tmp);
       52:  207:    }
------------------
_ZSt4swapIPN12AsyncRuntime6ResultINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEENSt9enable_ifIXsrSt6__and_IJSt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleISE_ESt18is_move_assignableISE_EEE5valueEvE4typeERSE_SO_:
function _ZSt4swapIPN12AsyncRuntime6ResultINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEENSt9enable_ifIXsrSt6__and_IJSt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleISE_ESt18is_move_assignableISE_EEE5valueEvE4typeERSE_SO_ called 2 returned 100% blocks executed 100%
        2:  196:    swap(_Tp& __a, _Tp& __b)
        -:  197:    _GLIBCXX_NOEXCEPT_IF(__and_<is_nothrow_move_constructible<_Tp>,
        -:  198:				is_nothrow_move_assignable<_Tp>>::value)
        -:  199:    {
        -:  200:#if __cplusplus < 201103L
        -:  201:      // concept requirements
        -:  202:      __glibcxx_function_requires(_SGIAssignableConcept<_Tp>)
        -:  203:#endif
        2:  204:      _Tp __tmp = _GLIBCXX_MOVE(__a);
        2:  204-block  0
call    0 returned 2
        2:  205:      __a = _GLIBCXX_MOVE(__b);
call    0 returned 2
        2:  206:      __b = _GLIBCXX_MOVE(__tmp);
call    0 returned 2
        2:  207:    }
------------------
_ZSt4swapIPFvRKSt9_Any_dataOPvEENSt9enable_ifIXsrSt6__and_IJSt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleISB_ESt18is_move_assignableISB_EEE5valueEvE4typeERSB_SL_:
function _ZSt4swapIPFvRKSt9_Any_dataOPvEENSt9enable_ifIXsrSt6__and_IJSt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleISB_ESt18is_move_assignableISB_EEE5valueEvE4typeERSB_SL_ called 4 returned 100% blocks executed 100%
        4:  196:    swap(_Tp& __a, _Tp& __b)
        -:  197:    _GLIBCXX_NOEXCEPT_IF(__and_<is_nothrow_move_constructible<_Tp>,
        -:  198:				is_nothrow_move_assignable<_Tp>>::value)
        -:  199:    {
        -:  200:#if __cplusplus < 201103L
        -:  201:      // concept requirements
        -:  202:      __glibcxx_function_requires(_SGIAssignableConcept<_Tp>)
        -:  203:#endif
        4:  204:      _Tp __tmp = _GLIBCXX_MOVE(__a);
        4:  204-block  0
call    0 returned 4
        4:  205:      __a = _GLIBCXX_MOVE(__b);
call    0 returned 4
        4:  206:      __b = _GLIBCXX_MOVE(__tmp);
call    0 returned 4
        4:  207:    }
------------------
_ZSt4swapIPFbRSt9_Any_dataRKS0_St18_Manager_operationEENSt9enable_ifIXsrSt6__and_IJSt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleISB_ESt18is_move_assignableISB_EEE5valueEvE4typeERSB_SL_:
function _ZSt4swapIPFbRSt9_Any_dataRKS0_St18_Manager_operationEENSt9enable_ifIXsrSt6__and_IJSt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleISB_ESt18is_move_assignableISB_EEE5valueEvE4typeERSB_SL_ called 4 returned 100% blocks executed 100%
        4:  196:    swap(_Tp& __a, _Tp& __b)
        -:  197:    _GLIBCXX_NOEXCEPT_IF(__and_<is_nothrow_move_constructible<_Tp>,
        -:  198:				is_nothrow_move_assignable<_Tp>>::value)
        -:  199:    {
        -:  200:#if __cplusplus < 201103L
        -:  201:      // concept requirements
        -:  202:      __glibcxx_function_requires(_SGIAssignableConcept<_Tp>)
        -:  203:#endif
        4:  204:      _Tp __tmp = _GLIBCXX_MOVE(__a);
        4:  204-block  0
call    0 returned 4
        4:  205:      __a = _GLIBCXX_MOVE(__b);
call    0 returned 4
        4:  206:      __b = _GLIBCXX_MOVE(__tmp);
call    0 returned 4
        4:  207:    }
------------------
_ZSt4swapISt9_Any_dataENSt9enable_ifIXsrSt6__and_IJSt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS5_ESt18is_move_assignableIS5_EEE5valueEvE4typeERS5_SF_:
function _ZSt4swapISt9_Any_dataENSt9enable_ifIXsrSt6__and_IJSt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS5_ESt18is_move_assignableIS5_EEE5valueEvE4typeERS5_SF_ called 4 returned 100% blocks executed 100%
        4:  196:    swap(_Tp& __a, _Tp& __b)
        -:  197:    _GLIBCXX_NOEXCEPT_IF(__and_<is_nothrow_move_constructible<_Tp>,
        -:  198:				is_nothrow_move_assignable<_Tp>>::value)
        -:  199:    {
        -:  200:#if __cplusplus < 201103L
        -:  201:      // concept requirements
        -:  202:      __glibcxx_function_requires(_SGIAssignableConcept<_Tp>)
        -:  203:#endif
        4:  204:      _Tp __tmp = _GLIBCXX_MOVE(__a);
        4:  204-block  0
call    0 returned 4
        4:  205:      __a = _GLIBCXX_MOVE(__b);
call    0 returned 4
        4:  206:      __b = _GLIBCXX_MOVE(__tmp);
call    0 returned 4
        4:  207:    }
------------------
_ZSt4swapINSt13__future_base12_Result_base8_DeleterEENSt9enable_ifIXsrSt6__and_IJSt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS7_ESt18is_move_assignableIS7_EEE5valueEvE4typeERS7_SH_:
function _ZSt4swapINSt13__future_base12_Result_base8_DeleterEENSt9enable_ifIXsrSt6__and_IJSt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS7_ESt18is_move_assignableIS7_EEE5valueEvE4typeERS7_SH_ called 11 returned 100% blocks executed 100%
       11:  196:    swap(_Tp& __a, _Tp& __b)
        -:  197:    _GLIBCXX_NOEXCEPT_IF(__and_<is_nothrow_move_constructible<_Tp>,
        -:  198:				is_nothrow_move_assignable<_Tp>>::value)
        -:  199:    {
        -:  200:#if __cplusplus < 201103L
        -:  201:      // concept requirements
        -:  202:      __glibcxx_function_requires(_SGIAssignableConcept<_Tp>)
        -:  203:#endif
       11:  204:      _Tp __tmp = _GLIBCXX_MOVE(__a);
       11:  204-block  0
call    0 returned 11
       11:  205:      __a = _GLIBCXX_MOVE(__b);
call    0 returned 11
       11:  206:      __b = _GLIBCXX_MOVE(__tmp);
call    0 returned 11
       11:  207:    }
------------------
_ZSt4swapIPNSt13__future_base12_Result_baseEENSt9enable_ifIXsrSt6__and_IJSt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS7_ESt18is_move_assignableIS7_EEE5valueEvE4typeERS7_SH_:
function _ZSt4swapIPNSt13__future_base12_Result_baseEENSt9enable_ifIXsrSt6__and_IJSt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS7_ESt18is_move_assignableIS7_EEE5valueEvE4typeERS7_SH_ called 11 returned 100% blocks executed 100%
       11:  196:    swap(_Tp& __a, _Tp& __b)
        -:  197:    _GLIBCXX_NOEXCEPT_IF(__and_<is_nothrow_move_constructible<_Tp>,
        -:  198:				is_nothrow_move_assignable<_Tp>>::value)
        -:  199:    {
        -:  200:#if __cplusplus < 201103L
        -:  201:      // concept requirements
        -:  202:      __glibcxx_function_requires(_SGIAssignableConcept<_Tp>)
        -:  203:#endif
       11:  204:      _Tp __tmp = _GLIBCXX_MOVE(__a);
       11:  204-block  0
call    0 returned 11
       11:  205:      __a = _GLIBCXX_MOVE(__b);
call    0 returned 11
       11:  206:      __b = _GLIBCXX_MOVE(__tmp);
call    0 returned 11
       11:  207:    }
------------------
_ZSt4swapIPNSt13__future_base13_State_baseV2EENSt9enable_ifIXsrSt6__and_IJSt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS7_ESt18is_move_assignableIS7_EEE5valueEvE4typeERS7_SH_:
function _ZSt4swapIPNSt13__future_base13_State_baseV2EENSt9enable_ifIXsrSt6__and_IJSt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS7_ESt18is_move_assignableIS7_EEE5valueEvE4typeERS7_SH_ called 16 returned 100% blocks executed 100%
       16:  196:    swap(_Tp& __a, _Tp& __b)
        -:  197:    _GLIBCXX_NOEXCEPT_IF(__and_<is_nothrow_move_constructible<_Tp>,
        -:  198:				is_nothrow_move_assignable<_Tp>>::value)
        -:  199:    {
        -:  200:#if __cplusplus < 201103L
        -:  201:      // concept requirements
        -:  202:      __glibcxx_function_requires(_SGIAssignableConcept<_Tp>)
        -:  203:#endif
       16:  204:      _Tp __tmp = _GLIBCXX_MOVE(__a);
       16:  204-block  0
call    0 returned 16
       16:  205:      __a = _GLIBCXX_MOVE(__b);
call    0 returned 16
       16:  206:      __b = _GLIBCXX_MOVE(__tmp);
call    0 returned 16
       16:  207:    }
------------------
        -:  208:
        -:  209:  // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  210:  // DR 809. std::swap should be overloaded for array types.
        -:  211:  /// Swap the contents of two arrays.
        -:  212:  template<typename _Tp, size_t _Nm>
        -:  213:    _GLIBCXX20_CONSTEXPR
        -:  214:    inline
        -:  215:#if __cplusplus >= 201103L
        -:  216:    typename enable_if<__is_swappable<_Tp>::value>::type
        -:  217:#else
        -:  218:    void
        -:  219:#endif
        -:  220:    swap(_Tp (&__a)[_Nm], _Tp (&__b)[_Nm])
        -:  221:    _GLIBCXX_NOEXCEPT_IF(__is_nothrow_swappable<_Tp>::value)
        -:  222:    {
        -:  223:      for (size_t __n = 0; __n < _Nm; ++__n)
        -:  224:	swap(__a[__n], __b[__n]);
        -:  225:    }
        -:  226:
        -:  227:  /// @} group utilities
        -:  228:_GLIBCXX_END_NAMESPACE_VERSION
        -:  229:} // namespace
        -:  230:
        -:  231:#endif /* _MOVE_H */
