        -:    0:Source:/home/df/Documents/workspace/async_runtime/include/ar/stack.hpp
        -:    0:Graph:/home/df/Documents/workspace/async_runtime/cmake-build-debug-coverage/CMakeFiles/ar.dir/src/tcp.cpp.gcno
        -:    0:Data:/home/df/Documents/workspace/async_runtime/cmake-build-debug-coverage/CMakeFiles/ar.dir/src/tcp.cpp.gcda
        -:    0:Runs:1
        -:    1:#ifndef AR_STACK_H
        -:    2:#define AR_STACK_H
        -:    3:
        -:    4:#include "ar/helper.hpp"
        -:    5:
        -:    6:namespace AsyncRuntime {
        -:    7:
        -:    8:    /**
        -:    9:     * @struct StackTraits
        -:   10:     * @brief
        -:   11:     */
        -:   12:    struct  StackTraits
        -:   13:    {
        -:   14:        static bool IsUnbounded() RNT_NOEXCEPT_OR_NOTHROW;
        -:   15:        static std::size_t PageSize() RNT_NOEXCEPT_OR_NOTHROW;
        -:   16:        static std::size_t DefaultSize() RNT_NOEXCEPT_OR_NOTHROW;
        -:   17:        static std::size_t MinimumSize() RNT_NOEXCEPT_OR_NOTHROW;
        -:   18:        static std::size_t MaximumSize() RNT_NOEXCEPT_OR_NOTHROW;
        -:   19:    };
        -:   20:
        -:   21:
        -:   22:    /**
        -:   23:     * @struct
        -:   24:     * @brief
        -:   25:     */
        -:   26:    struct StackContext {
function _ZN12AsyncRuntime12StackContextC2Ev called 0 returned 0% blocks executed 0%
    #####:   27:        StackContext() :sp(0), size(0) {};
        -:   28:        std::size_t              size;
        -:   29:        void                    *sp;
        -:   30:        void                    *begin;
        -:   31:    };
        -:   32:
        -:   33:
        -:   34:    /**
        -:   35:     * @class BasicFixedSizeStack<>
        -:   36:     * @brief
        -:   37:     * @tparam TraitsT
        -:   38:     */
        -:   39:    template< typename TraitsT >
        -:   40:    class BasicFixedSizeStack {
        -:   41:    private:
        -:   42:        std::size_t     size_;
        -:   43:
        -:   44:    public:
        -:   45:        typedef TraitsT traits_type;
        -:   46:
        -:   47:
function _ZN12AsyncRuntime19BasicFixedSizeStackINS_11StackTraitsEEC2Em called 0 returned 0% blocks executed 0%
    #####:   48:        BasicFixedSizeStack( std::size_t size = traits_type::DefaultSize() ) RNT_NOEXCEPT_OR_NOTHROW :
    #####:   49:                size_( size) {
    #####:   50:        }
        -:   51:
        -:   52:
function _ZN12AsyncRuntime19BasicFixedSizeStackINS_11StackTraitsEE8AllocateEv called 0 returned 0% blocks executed 0%
    #####:   53:        StackContext Allocate() {
    #####:   54:            void * vp = std::malloc( size_);
    #####:   55:            if ( ! vp) {
    %%%%%:   55-block  0
branch  0 never executed
branch  1 never executed
    #####:   56:                throw std::bad_alloc();
    %%%%%:   56-block  0
call    0 never executed
call    1 never executed
call    2 never executed
        -:   57:            }
    #####:   58:            StackContext sctx;
    %%%%%:   58-block  0
call    0 never executed
    #####:   59:            sctx.size = size_;
    #####:   60:            sctx.sp = static_cast< char * >( vp) + sctx.size;
    #####:   61:            sctx.begin = sctx.sp;
    #####:   62:            return sctx;
        -:   63:        }
        -:   64:
        -:   65:
function _ZN12AsyncRuntime19BasicFixedSizeStackINS_11StackTraitsEE10DeallocateERNS_12StackContextE called 0 returned 0% blocks executed 0%
    #####:   66:        void Deallocate( StackContext & sctx) RNT_NOEXCEPT_OR_NOTHROW {
    #####:   67:            assert( sctx.sp);
    %%%%%:   67-block  0
branch  0 never executed
branch  1 never executed
    %%%%%:   67-block  1
call    2 never executed
    #####:   68:            void * vp = static_cast< char * >( sctx.begin) - sctx.size;
    #####:   69:            std::free( vp);
    #####:   70:        }
        -:   71:    };
        -:   72:
        -:   73:    typedef BasicFixedSizeStack< StackTraits > FixedSizeStack;
        -:   74:}
        -:   75:
        -:   76:#endif //AR_STACK_H
