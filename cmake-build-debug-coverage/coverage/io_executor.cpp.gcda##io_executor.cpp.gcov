        -:    0:Source:/home/df/Documents/workspace/async_runtime/src/io_executor.cpp
        -:    0:Graph:/home/df/Documents/workspace/async_runtime/cmake-build-debug-coverage/CMakeFiles/ar.dir/src/io_executor.cpp.gcno
        -:    0:Data:/home/df/Documents/workspace/async_runtime/cmake-build-debug-coverage/CMakeFiles/ar.dir/src/io_executor.cpp.gcda
        -:    0:Runs:1
        -:    1:#include "ar/io_executor.hpp"
        -:    2:#include "uv.h"
        -:    3:
        -:    4:
        -:    5:using namespace AsyncRuntime;
        -:    6:
        -:    7:
        -:    8:static uv_async_t   exit_handle;
        -:    9:
        -:   10:
function _ZL11ExitAsyncCbP10uv_async_s called 1 returned 100% blocks executed 100%
        1:   11:static void ExitAsyncCb(uv_async_t* handle)
        -:   12:{
        1:   13:    uv_close((uv_handle_t*) &exit_handle, nullptr);
        1:   13-block  0
call    0 returned 1
        1:   14:}
        -:   15:
        -:   16:
function _ZL9AsyncIOCbP10uv_async_s called 4 returned 100% blocks executed 87%
        4:   17:static void AsyncIOCb(uv_async_t* handle)
        -:   18:{
        4:   19:    if(handle->data != nullptr) {
        4:   19-block  0
branch  0 taken 4 (fallthrough)
branch  1 taken 0
        4:   20:        auto* ctx = (IOExecutor::AsyncHandlerCtx*)handle->data;
        8:   21:        while(!ctx->run_queue.empty()) {
        4:   21-block  0
        8:   21-block  1
call    0 returned 8
branch  1 taken 4
branch  2 taken 4 (fallthrough)
        4:   22:            auto v = ctx->run_queue.pop();
        4:   22-block  0
call    0 returned 4
        4:   23:            if(v) {
call    0 returned 4
branch  1 taken 4 (fallthrough)
branch  2 taken 0
        4:   24:                auto *task = (IOTask *) v.value();
        4:   24-block  0
call    0 returned 4
branch  1 taken 4 (fallthrough)
branch  2 taken 0 (throw)
        4:   25:                if(!task->Execute(handle->loop)) {
        4:   25-block  0
call    0 returned 4
branch  1 taken 4 (fallthrough)
branch  2 taken 0 (throw)
        4:   25-block  1
branch  3 taken 0 (fallthrough)
branch  4 taken 4
    #####:   26:                    delete task;
    %%%%%:   26-block  0
branch  0 never executed
branch  1 never executed
    %%%%%:   26-block  1
call    2 never executed
        -:   27:                }
        -:   28:            }
        -:   29:        }
        -:   30:    }
        4:   31:}
        4:   31-block  0
        -:   32:
        -:   33:
function _ZN12AsyncRuntime10IOExecutorC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE called 1 returned 100% blocks executed 56%
        1:   34:IOExecutor::IOExecutor(const std::string & name_) : name(name_)
        1:   34-block  0
call    0 returned 1
call    1 returned 1
call    2 returned 1
branch  3 taken 1 (fallthrough)
branch  4 taken 0 (throw)
        1:   34-block  1
call    5 returned 1
branch  6 taken 1 (fallthrough)
branch  7 taken 0 (throw)
        -:   35:{
        1:   36:    loop = uv_default_loop();
        1:   36-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   37:    async_handler.data = &async_handler_ctx;
        -:   38:
        1:   39:    uv_async_init(loop, &exit_handle, ExitAsyncCb);
        1:   39-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   40:    uv_async_init(loop, &async_handler, AsyncIOCb);
        1:   40-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        -:   41:
function _ZZN12AsyncRuntime10IOExecutorC4ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEENKUlvE_clEv called 1 returned 100% blocks executed 100%
        2:   42:    loop_thread.Submit([this] { Loop(); });
        1:   42-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
    $$$$$:   42-block  1
        1:   42-block  2
call    3 returned 1
        1:   43:}
        1:   43-block  0
    $$$$$:   43-block  1
call    0 never executed
    $$$$$:   43-block  2
call    1 never executed
    $$$$$:   43-block  3
call    2 never executed
    $$$$$:   43-block  4
call    3 never executed
        -:   44:
        -:   45:
        2:   46:IOExecutor::~IOExecutor()
        -:   47:{
        1:   48:    uv_async_send(&exit_handle);
        1:   49:    uv_stop(loop);
        1:   50:    loop_thread.Join();
        2:   51:}
------------------
_ZN12AsyncRuntime10IOExecutorD0Ev:
function _ZN12AsyncRuntime10IOExecutorD0Ev called 1 returned 100% blocks executed 100%
        1:   46:IOExecutor::~IOExecutor()
        -:   47:{
        -:   48:    uv_async_send(&exit_handle);
        -:   49:    uv_stop(loop);
        -:   50:    loop_thread.Join();
        1:   51:}
        1:   51-block  0
call    0 returned 1
call    1 returned 1
------------------
_ZN12AsyncRuntime10IOExecutorD2Ev:
function _ZN12AsyncRuntime10IOExecutorD2Ev called 1 returned 100% blocks executed 100%
        1:   46:IOExecutor::~IOExecutor()
        -:   47:{
        1:   48:    uv_async_send(&exit_handle);
        1:   48-block  0
call    0 returned 1
        1:   49:    uv_stop(loop);
call    0 returned 1
        1:   50:    loop_thread.Join();
call    0 returned 1
        1:   51:}
call    0 returned 1
call    1 returned 1
call    2 returned 1
call    3 returned 1
------------------
        -:   52:
        -:   53:
function _ZN12AsyncRuntime10IOExecutor4LoopEv called 1 returned 100% blocks executed 100%
        1:   54:void IOExecutor::Loop()
        -:   55:{
        1:   56:    uv_run(loop, UV_RUN_DEFAULT);
        1:   56-block  0
call    0 returned 1
        1:   57:}
        -:   58:
        -:   59:
function _ZN12AsyncRuntime10IOExecutor4PostEPNS_4TaskE called 0 returned 0% blocks executed 0%
    #####:   60:void IOExecutor::Post(Task *task)
        -:   61:{
    #####:   62:    Post(reinterpret_cast<IOTask *>(task));
    %%%%%:   62-block  0
call    0 never executed
    #####:   63:}
        -:   64:
        -:   65:
function _ZN12AsyncRuntime10IOExecutor4PostEPNS_6IOTaskE called 4 returned 100% blocks executed 100%
        4:   66:void IOExecutor::Post(IOTask *io_task)
        -:   67:{
        4:   68:    auto* ctx = (AsyncHandlerCtx*)async_handler.data;
        4:   69:    ctx->run_queue.push(io_task);
        4:   69-block  0
call    0 returned 4
        4:   70:    uv_async_send(&async_handler);
call    0 returned 4
        4:   71:}
        -:   72:
