        -:    0:Source:/home/df/Documents/workspace/async_runtime/include/ar/thread_executor.hpp
        -:    0:Graph:/home/df/Documents/workspace/async_runtime/cmake-build-debug-coverage/CMakeFiles/ar.dir/src/io_executor.cpp.gcno
        -:    0:Data:/home/df/Documents/workspace/async_runtime/cmake-build-debug-coverage/CMakeFiles/ar.dir/src/io_executor.cpp.gcda
        -:    0:Runs:1
        -:    1:#ifndef AR_THREADEXECUTOR_H
        -:    2:#define AR_THREADEXECUTOR_H
        -:    3:
        -:    4:#include <iostream>
        -:    5:#include <vector>
        -:    6:#include <thread>
        -:    7:#include <algorithm>
        -:    8:#include <memory>
        -:    9:
        -:   10:namespace AsyncRuntime {
        -:   11:
        -:   12:
        -:   13:    /**
        -:   14:     * @brief
        -:   15:     */
        -:   16:    class ThreadExecutor {
        -:   17:    public:
function _ZN12AsyncRuntime14ThreadExecutorC2Ev called 17 returned 100% blocks executed 100%
       17:   18:        ThreadExecutor() = default;
       17:   18-block  0
call    0 returned 17
        -:   19:        virtual ~ThreadExecutor();
        -:   20:
        -:   21:
        -:   22:        ThreadExecutor(const ThreadExecutor&) = delete;
        -:   23:        ThreadExecutor& operator =(const ThreadExecutor&) = delete;
        -:   24:        ThreadExecutor(ThreadExecutor&&) = delete;
        -:   25:        ThreadExecutor& operator =(ThreadExecutor&&) = delete;
        -:   26:
        -:   27:
        -:   28:        /**
        -:   29:         * @brief
        -:   30:         * @tparam Fn
        -:   31:         * @tparam Args
        -:   32:         * @param fn
        -:   33:         * @param args
        -:   34:         */
        -:   35:        template<class Fn, class ... Args>
function _ZN12AsyncRuntime14ThreadExecutor6SubmitIZNS_10IOExecutorC4ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlvE_JEEEvOT_DpOT0_ called 1 returned 100% blocks executed 78%
        1:   36:        void Submit(Fn&& fn, Args&& ... args)
        -:   37:        {
        1:   38:            threads.emplace_back(std::move(std::thread(std::forward<Fn>(fn), std::forward<Args>(args)...)));
        1:   38-block  0
call    0 returned 1
call    1 returned 1
call    2 returned 1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:   38-block  1
call    6 returned 1
    $$$$$:   38-block  2
call    7 never executed
        1:   39:        }
        -:   40:
        -:   41:
        -:   42:        /**
        -:   43:         * @brief
        -:   44:         */
        -:   45:        void Join();
        -:   46:    private:
        -:   47:        std::vector<std::thread>     threads;
        -:   48:    };
        -:   49:
        -:   50:
        -:   51:    typedef std::shared_ptr<ThreadExecutor> ThreadExecutorPtr;
        -:   52:}
        -:   53:
        -:   54:#endif //AR_THREADEXECUTOR_H
