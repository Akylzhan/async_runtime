        -:    0:Source:/home/df/Documents/workspace/async_runtime/src/base64.cpp
        -:    0:Graph:/home/df/Documents/workspace/async_runtime/cmake-build-debug-coverage/CMakeFiles/ar.dir/src/base64.cpp.gcno
        -:    0:Data:/home/df/Documents/workspace/async_runtime/cmake-build-debug-coverage/CMakeFiles/ar.dir/src/base64.cpp.gcda
        -:    0:Runs:1
        -:    1:#include "base64.h"
        -:    2:
        -:    3:#include <boost/archive/iterators/binary_from_base64.hpp>
        -:    4:#include <boost/archive/iterators/base64_from_binary.hpp>
        -:    5:#include <boost/archive/iterators/transform_width.hpp>
        -:    6:#include <boost/algorithm/string.hpp>
        -:    7:
        -:    8:
function _ZN12AsyncRuntime12Base64DecodeERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE called 0 returned 0% blocks executed 0%
    #####:    9:std::string AsyncRuntime::Base64Decode(const std::string &val) {
        -:   10:    using namespace boost::archive::iterators;
        -:   11:    using It = transform_width<binary_from_base64<std::string::const_iterator>, 8, 6>;
function _ZZN12AsyncRuntime12Base64DecodeERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEENKUlcE_clEc called 0 returned 0% blocks executed 0%
    #####:   12:    return boost::algorithm::trim_right_copy_if(std::string(It(std::begin(val)), It(std::end(val))), [](char c) {
    %%%%%:   12-block  0
call    0 never executed
call    1 never executed
call    2 never executed
branch  3 never executed
branch  4 never executed
    %%%%%:   12-block  1
call    5 never executed
call    6 never executed
branch  7 never executed
branch  8 never executed
    %%%%%:   12-block  2
call    9 never executed
branch 10 never executed
branch 11 never executed
    %%%%%:   12-block  3
call   12 never executed
call   13 never executed
    $$$$$:   12-block  4
call   14 never executed
    $$$$$:   12-block  5
    $$$$$:   12-block  6
    $$$$$:   12-block  7
    $$$$$:   12-block  8
call   15 never executed
    #####:   13:        return c == '\0';
    %%%%%:   13-block  0
    #####:   14:    });
    %%%%%:   14-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:   14-block  1
        -:   15:}
        -:   16:
        -:   17:
        -:   18:
function _ZN12AsyncRuntime12Base64EncodeERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE called 0 returned 0% blocks executed 0%
    #####:   19:std::string AsyncRuntime::Base64Encode(const std::string &val) {
        -:   20:    using namespace boost::archive::iterators;
        -:   21:    using It = base64_from_binary<transform_width<std::string::const_iterator, 6, 8>>;
    #####:   22:    auto tmp = std::string(It(std::begin(val)), It(std::end(val)));
    %%%%%:   22-block  0
call    0 never executed
call    1 never executed
call    2 never executed
branch  3 never executed
branch  4 never executed
    %%%%%:   22-block  1
call    5 never executed
call    6 never executed
branch  7 never executed
branch  8 never executed
    %%%%%:   22-block  2
call    9 never executed
branch 10 never executed
branch 11 never executed
    %%%%%:   22-block  3
call   12 never executed
    $$$$$:   22-block  4
    $$$$$:   22-block  5
    $$$$$:   22-block  6
    #####:   23:    return tmp.append((3 - val.size() % 3) % 3, '=');
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
    %%%%%:   23-block  0
call    4 never executed
branch  5 never executed
branch  6 never executed
    %%%%%:   23-block  1
    #####:   24:}
    %%%%%:   24-block  0
call    0 never executed
    $$$$$:   24-block  1
call    1 never executed
